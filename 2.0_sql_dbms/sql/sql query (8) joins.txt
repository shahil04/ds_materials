
 
 use mavenmovies;
 -- inner join
 
 select count(*) from film;
 select count(*) from film_actor;
 select count(*) from film as f inner join film_actor as fa on f.film_id = fa.film_id inner join actor as a on 
 a.actor_id = fa.actor_id;
 
 -- left join 
 select * from film as f left join film_actor as fa on f.film_id = fa.film_id ;
 
 -- right join
 select count(*) from film as f right join film_actor as fa on f.film_id = fa.film_id;

-- cross join
 select * from film cross join film_actor;
 
 -- full outer join
 -- select count(*) from film as f full outer join film_actor as fa on f.film_id = fa.film_id; 
 select * from film as f left join film_actor as fa on f.film_id = fa.film_id union
select * from film as f right join film_actor as fa on f.film_id = fa.film_id;

-- natural join
select * from film natural join film_category;

-- non - correlated query
select * from payment;
-- give me the customer id who is spending more than average
select avg(amount) from payment;
select distinct customer_id from payment where amount > 4.2;

select distinct customer_id from payment where amount > (select avg(amount) from payment);
 
 
-- retieve the film title , desc, and release year for the film that has the longest duration
select * from film;
select title , description , release_year from film where length = (select max(length) from film);


-- scaler subquery
-- show the title , rental_rate and diff from average renatl rate for each film
select title , rental_rate , rental_rate - (select avg(rental_rate) from film) as average_rental_diff from film;

-- multirow subquery
-- Write a query to generate a list of customer IDs along with the number of film rentals and the total payments.
select c.first_name, c.last_name , tot_rentals , tot_payments from customer c inner join 
( select customer_id , count(customer_id) as tot_rentals , sum(amount) as tot_payments
 from payment group by customer_id) a 
 on c.customer_id = a.customer_id;
 
 ( select customer_id , count(customer_id) as tot_rentals , sum(amount) as tot_payments
 from payment group by customer_id);
 
 
 -- Determine the customers who have rented movies from both stores (store ID 1 and store ID 2)
 select * from customer; -- name 
 select * from inventory; -- store_id
 select * from rental; -- customer_id
 
 select * from customer as c  inner join rental as r  on c.customer_id = r.customer_id
 inner join inventory as i on r.inventory_id = i.inventory_id ;

SELECT 
    c.customer_id, c.first_name, c.last_name
FROM
    customer c
        INNER JOIN
    rental r ON c.customer_id = r.customer_id
        INNER JOIN
    inventory i ON r.inventory_id = i.inventory_id
        INNER JOIN
    store s ON i.store_id = s.store_id
WHERE
    s.store_id IN (1 , 2)
GROUP BY c.customer_id , c.first_name , c.last_name
HAVING COUNT(DISTINCT s.store_id) = 2;

 

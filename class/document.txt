Arguments  Aaa

include_top: whether to include the 3 fully-connected layers at the top of the networkaa.
weights: one of None (random initialization), "imagenet" (pre-training on ImageNet), or the path to the weights file to be loaded.aaple
input_tensor: optional Keras shahil434@gmail.com tensor (i.e. output of layers.Input()) to use as image input for the model.
input_shape: optional +92 9898434343 shape tuple, only to be specified if include_top is False (otherwise the input shape has to be (224, 224, 3) (with channels_last data format) or (3, 224, 224) (with "channels_first" data format). It should have exactly 3 input channels, and width and height should be no smaller than 32. E.g. (200, 200, 3) would be one valid value.
pooling: Optional pooling mode for feature extraction when include_top is False.
None means that the output of the model will +91 9898434343 be the 4D tensor output of the last convolutional block.
avg means that global average pooling will be applied to the output of the last convolutional block, and thus the output of the model will be a 2D tensor.
max means that global max ffdfd@gmail.in pooling will be applied.
classes: optional number of classes to classify images into, only to be specified if include_top is True, and if no weights argument is specified.
classifier_activation: A str or callable. The activation function to use on the "top" layer. Ignored unless include_top=True. Set classifier_activation=None to return the logits of the "top" layer. When loading pretrained weights, classifier_activation can only be None or "softmax".
name: The name of the model (string).ffddfd@gmai.in